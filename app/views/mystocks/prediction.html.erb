<!DOCTYPE html>
<!--
    Created By Xuanzhengbo Ren, 2018
    The prediction site of Stock-Seer,part of mainpage.
    Using Echarts to display stock data.
-->
<html>
<head>
    <meta charset="utf-8">
    <title>Stock-Seer股票价格预测</title>
    <!-- myself css -->
    <style>
        html,body{
        height:100%;
        width:100%;
        padding:0px;
        margin: 0px;
        border:0px;
        }
        .search-form{
            height: 100%;
            background-color: #a0a0a052;
        }
    </style>
    <script>
        var stockCode = <%= @stock.code %>;
        var categoryData = [];
        var futureCatagory= [];
        var dailyValues = [];
        var furtureValues = [];
        var ma5 = [];
        var ma10 = [];
        var ma20 = [];
        //to evaluate page
        $('#btn_evaluate').on('click', function(){ loadPage('content', urlEvaluation + stockCode)});
        $(function(){
            $.ajax({
                type: 'GET',
                beforeSend: function(xhr) {
                    chartHistory.showLoading();
                    chartPrediction.showLoading();
                    xhr.setRequestHeader('X-CSRF-Token', $('meta[name="csrf-token"]').attr('content'))
                },
                url: '/price/'+ stockCode,
                timeout: 40000,
                error: function(request){
                    alert('Oooops~ Something gose wrong.');
                    chartHistory.hideLoading(); 
                    chartPrediction.hideLoading();
                },
                success: function(data){
                    historyData = JSON.parse(data.history);
                    futureData = JSON.parse(data.future);
                    //数据预处理
                    historyData.reverse();
                    futureData.reverse();
                    $.each(historyData, function(idx, dayData){
                        categoryData.push(dayData.date);
                        dailyValues.push([dayData.open, dayData.close, dayData.low, dayData.high]);
                        ma5.push(dayData.ma5);
                        ma10.push(dayData.ma10);
                        ma20.push(dayData.ma20);
                    });
                    futureData.reverse();
                    $.each(futureData, function(idx, dayData){
                        futureCatagory.push(dayData.date);
                        furtureValues.push([dayData.open, dayData.close, dayData.low, dayData.high]);
                    });
                    //数据更新
                    chartHistory.setOption({
                        xAxis: {
                            data: categoryData
                        },
                        series: [
                            {
                                name: '日K',
                                data: dailyValues
                            },
                            {
                                name: 'MA5',
                                data: ma5
                            },
                            {
                                name: 'MA10',
                                data: ma10
                            },
                            {
                                name: 'MA20',
                                data: ma20
                            }
                        ]
                    });
                    chartPrediction.setOption({
                        xAxis:{
                            data: futureCatagory
                        },
                        series: [
                            {
                                name: '日K',
                                data: furtureValues
                            }
                        ]
                    });
                    //数据更新end
                    chartHistory.hideLoading(); 
                    chartPrediction.hideLoading();
                }
            });
        });
    </script>
</head>
<body>
    <div class="container-fluid" style="height:100%; margin-top: 4%">
        <div class="row" id="history" style="height:45%">

        </div>
        <div class="row" id="prediction" style="height:45%">

        </div>
        <button id="btn_evaluate" class="btn btn-primary" style="margin-left: 47%; margin-top: 1%">股票评估</button>
    </div>
    <!-- Echarts script here!!! -->
    <script>
        var dom1 = document.getElementById('history');
        var dom2 = document.getElementById('prediction');
        var chartHistory = echarts.init(dom1);
        var chartPrediction = echarts.init(dom2);
        var app = {};
        option = null;
        var upColor = '#ec0000';
        var upBorderColor = '#8A0000';
        var downColor = '#00da3c';
        var downBorderColor = '#008F28';


        function splitData(rawData) {
            var categoryData = [];
            var values = []
            for (var i = 0; i < rawData.length; i++) {
                categoryData.push(rawData[i].splice(0, 1)[0]);
                values.push(rawData[i])
            }
            return {
                categoryData: categoryData,
                values: values
            };
        }

        function calculateMA(dayCount) {
            var result = [];
            for (var i = 0, len = data0.values.length; i < len; i++) {
                if (i < dayCount) {
                    result.push('-');
                    continue;
                }
                var sum = 0;
                for (var j = 0; j < dayCount; j++) {
                    sum += data0.values[i - j][1];
                }
                result.push(sum / dayCount);
            }
            return result;
        }



        optionHistory = {
            title: {
                text: '历史价格',
                left: 0
            },
            tooltip: {
                trigger: 'axis',
                axisPointer: {
                    type: 'cross'
                }
            },
            legend: {
                data: ['日K', 'MA5', 'MA10', 'MA20']
            },
            grid: {
                left: '10%',
                right: '10%',
                bottom: '15%'
            },
            xAxis: {
                type: 'category',
                data: [],
                scale: true,
                boundaryGap : false,
                axisLine: {onZero: false},
                splitLine: {show: false},
                splitNumber: 20,
                min: 'dataMin',
                max: 'dataMax'
            },
            yAxis: {
                scale: true,
                splitArea: {
                    show: true
                }
            },
            dataZoom: [
                {
                    type: 'inside',
                    start: 50,
                    end: 100
                },
                {
                    show: true,
                    type: 'slider',
                    y: '90%',
                    start: 50,
                    end: 100
                }
            ],
            series: [
                {
                    name: '日K',
                    type: 'candlestick',
                    data: [],
                    itemStyle: {
                        normal: {
                            color: upColor,
                            color0: downColor,
                            borderColor: upBorderColor,
                            borderColor0: downBorderColor
                        }
                    },
                    markPoint: {
                        label: {
                            normal: {
                                formatter: function (param) {
                                    return param != null ? Math.round(param.value) : '';
                                }
                            }
                        },
                        data: [
                            {
                                name: 'XX标点',
                                coord: ['2013/5/31', 2300],
                                value: 2300,
                                itemStyle: {
                                    normal: {color: 'rgb(41,60,85)'}
                                }
                            },
                            {
                                name: 'highest value',
                                type: 'max',
                                valueDim: 'highest'
                            },
                            {
                                name: 'lowest value',
                                type: 'min',
                                valueDim: 'lowest'
                            },
                            {
                                name: 'average value on close',
                                type: 'average',
                                valueDim: 'close'
                            }
                        ],
                        tooltip: {
                            formatter: function (param) {
                                return param.name + '<br>' + (param.data.coord || '');
                            }
                        }
                    },
                    markLine: {
                        symbol: ['none', 'none'],
                        data: [
                            [
                                {
                                    name: 'from lowest to highest',
                                    type: 'min',
                                    valueDim: 'lowest',
                                    symbol: 'circle',
                                    symbolSize: 10,
                                    label: {
                                        normal: {show: false},
                                        emphasis: {show: false}
                                    }
                                },
                                {
                                    type: 'max',
                                    valueDim: 'highest',
                                    symbol: 'circle',
                                    symbolSize: 10,
                                    label: {
                                        normal: {show: false},
                                        emphasis: {show: false}
                                    }
                                }
                            ],
                            {
                                name: 'min line on close',
                                type: 'min',
                                valueDim: 'close'
                            },
                            {
                                name: 'max line on close',
                                type: 'max',
                                valueDim: 'close'
                            }
                        ]
                    }
                },
                {
                    name: 'MA5',
                    type: 'line',
                    data: [],
                    smooth: true,
                    lineStyle: {
                        normal: {opacity: 0.5}
                    }
                },
                {
                    name: 'MA10',
                    type: 'line',
                    data: [],
                    smooth: true,
                    lineStyle: {
                        normal: {opacity: 0.5}
                    }
                },
                {
                    name: 'MA20',
                    type: 'line',
                    data: [],
                    smooth: true,
                    lineStyle: {
                        normal: {opacity: 0.5}
                    }
                }

            ]
        };
        
        optionPrediction = {
            title: {
                text: '预测价格',
                left: 0
            },
            tooltip: {
                trigger: 'axis',
                axisPointer: {
                    type: 'cross'
                }
            },
            legend: {
                data: ['日K', 'MA5', 'MA10', 'MA20', 'MA30']
            },
            grid: {
                left: '10%',
                right: '10%',
                bottom: '15%'
            },
            xAxis: {
                type: 'category',
                data: [],
                scale: true,
                boundaryGap : false,
                axisLine: {onZero: false},
                splitLine: {show: false},
                splitNumber: 20,
                min: 'dataMin',
                max: 'dataMax'
            },
            yAxis: {
                scale: true,
                splitArea: {
                    show: true
                }
            },
            dataZoom: [
                {
                    type: 'inside',
                    start: 50,
                    end: 100
                },
                {
                    show: true,
                    type: 'slider',
                    y: '90%',
                    start: 50,
                    end: 100
                }
            ],
            series: [
                {
                    name: '日K',
                    type: 'candlestick',
                    data: [],
                    itemStyle: {
                        normal: {
                            color: upColor,
                            color0: downColor,
                            borderColor: upBorderColor,
                            borderColor0: downBorderColor
                        }
                    },
                    markPoint: {
                        label: {
                            normal: {
                                formatter: function (param) {
                                    return param != null ? Math.round(param.value) : '';
                                }
                            }
                        },
                        data: [
                            {
                                name: 'XX标点',
                                coord: ['2013/5/31', 2300],
                                value: 2300,
                                itemStyle: {
                                    normal: {color: 'rgb(41,60,85)'}
                                }
                            },
                            {
                                name: 'highest value',
                                type: 'max',
                                valueDim: 'highest'
                            },
                            {
                                name: 'lowest value',
                                type: 'min',
                                valueDim: 'lowest'
                            },
                            {
                                name: 'average value on close',
                                type: 'average',
                                valueDim: 'close'
                            }
                        ],
                        tooltip: {
                            formatter: function (param) {
                                return param.name + '<br>' + (param.data.coord || '');
                            }
                        }
                    },
                    markLine: {
                        symbol: ['none', 'none'],
                        data: [
                            [
                                {
                                    name: 'from lowest to highest',
                                    type: 'min',
                                    valueDim: 'lowest',
                                    symbol: 'circle',
                                    symbolSize: 10,
                                    label: {
                                        normal: {show: false},
                                        emphasis: {show: false}
                                    }
                                },
                                {
                                    type: 'max',
                                    valueDim: 'highest',
                                    symbol: 'circle',
                                    symbolSize: 10,
                                    label: {
                                        normal: {show: false},
                                        emphasis: {show: false}
                                    }
                                }
                            ],
                            {
                                name: 'min line on close',
                                type: 'min',
                                valueDim: 'close'
                            },
                            {
                                name: 'max line on close',
                                type: 'max',
                                valueDim: 'close'
                            }
                        ]
                    }
                },
                {
                    name: 'MA5',
                    type: 'line',
                    data: [],
                    smooth: true,
                    lineStyle: {
                        normal: {opacity: 0.5}
                    }
                },
                {
                    name: 'MA10',
                    type: 'line',
                    data: [],
                    smooth: true,
                    lineStyle: {
                        normal: {opacity: 0.5}
                    }
                },
                {
                    name: 'MA20',
                    type: 'line',
                    data: [],
                    smooth: true,
                    lineStyle: {
                        normal: {opacity: 0.5}
                    }
                }

            ]
        };

        if (optionHistory && typeof optionHistory === "object") {
            chartHistory.setOption(optionHistory, true);
            chartPrediction.setOption(optionPrediction, true);
        }
    </script>
</body>
</html>
